Внесение вклада в проект
========================

Этот документ предоставляет руководство по тому, как внести вклад в проект на GitHub.

Основные ветки проекта
----------------------

master
~~~~~~

"master" ветка используется для хранения стабильных и релизных версий проекта. Это значит, что код в этой ветке должен быть стабильным и прошедшим проверку на ошибки и тестирование.
Новые изменения вносятся в "master" ветку только после тщательного тестирования и убеждения в их стабильности.

develop
~~~~~~~

"develop" ветка используется для разработки новых функций и исправления ошибок. Поэтому она является основной для всех дополнений, изменений и правок в проекте. Она может считаться более "нестабильной" в сравнении с "master" веткой, так как новый код добавляется сюда для дальнейшей проверки и тестирования.

Все новые изменения вносятся в "develop" ветку, где они могут быть объединены и протестированы вместе с другими изменениями.

Шаг 1: Клонирование репозитория
-------------------------------

.. attention::
   Для клонирования репозитория используйте ветку *develop*!

Для начала вам нужно скопировать (клонировать) файлы проекта из репозитория. Вы создадите на своем локальном компьютере копию оригинального репозитория, в который и будете вносить изменения.


1. Откройте терминал на вашем компьютере.
2. Воспользуйтесь командой `git clone` для клонирования вашей копии проекта:

   .. code-block:: bash

      git clone https://github.com/techwri/techwritersweb.git
      git checkout -b develop

Шаг 2: Создание и переключение на ветку
---------------------------------------

1. Перейдите в папку проекта:

   .. code-block:: bash

      cd techwritersru

2. Создайте новую ветку для ваших изменений:

   .. code-block:: bash

      git checkout -b название-вашей-ветки

Шаг 3: Внесение изменений
-------------------------

1. Внесите необходимые изменения в файлы проекта, используя любой текстовый редактор.

Шаг 4: Добавить и зафиксировать изменения (commit)
--------------------------------------------------

На этом шаге вы фиксируете все изменения локально.

1. Добавьте изменения в индекс:

   .. code-block:: bash

      git add .

2. Сделайте коммит с описанием ваших изменений:

   .. code-block:: bash

      git commit -m "Описание ваших изменений"

Шаг 5: Отправка изменений на GitHub
-----------------------------------

1. Отправьте вашу ветку с изменениями на GitHub:

   .. code-block:: bash

      git push origin название-вашей-ветки

Шаг 6: Создание Pull Request
----------------------------

После завершения работы в своей ветке, необходимо отправить свои изменения в основной репозиторий (Pull Request) чтобы добавить ваши локальные изменения в оригинальный репозиторий.

1. Перейдите на страницу вашего форка проекта на GitHub.
2. Нажмите кнопку "New Pull Request".
3. Укажите базовую и сравниваемую ветки.
4. Добавьте описание ваших изменений.
5. Нажмите "Create Pull Request".

Шаг 7: Обсуждение и слияние
---------------------------

1. Ожидайте комментарии и обратную связь от владельца проекта.
2. Владелец проекта может слить ваши изменения с основной веткой после проверки и одобрения.

Шаг 8: Синхронизация с основным проектом (при необходимости)
------------------------------------------------------------

1. Если ваш Pull Request принят, вы можете удалить ветку и создать новую с последним состоянием основной ветки:

   .. code-block:: bash

      git checkout main
      git pull upstream main

2. Если вы хотите обновить свою ветку до последнего состояния основной ветки:

   .. code-block:: bash

      git checkout your-feature-branch
      git merge main

.. note::
   Важно следовать указаниям и рекомендациям владельца проекта для внесения вклада.

Инструкции  для администратора
------------------------------

Как принимать изменения (Pull requests) из других веток
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Для принятия Pull Request (PR) на GitHub, выполните следующие шаги:

#. Откройте ваш репозиторий на GitHub.
#. Перейдите в раздел "Pull Requests" (PR) в верхней части страницы вашего репозитория.
#. Найдите нужный PR в списке открытых PR.
#. Нажмите на заголовок PR, чтобы открыть его страницу.
#. На странице PR вы увидите кнопку "Merge" (Слить). Нажмите на нее.
#. GitHub предоставит вам опции для слияния PR. Вы можете выбрать, каким образом вы хотите сливать изменения:

   - "Create a merge commit" (Создать коммит слияния) - в этом случае будут сохранены детали всех изменений и коммитов из ветки PR. В истории коммитов появятся дополнительные коммиты слияния, чтобы показать, какие изменения были внесены из PR.
   - "Squash and merge" (Сжать и слить) - (рекомендуемый!) в этом случае все изменения из ветки PR объединяются в один коммит, что делает историю коммитов более чистой и упрощенной.

#. Нажмите "Confirm merge" (Подтвердить слияние), чтобы выполнить слияние.

.. attention:: После выполнения слияние на GitHub обновите локальный репозиторий


Загрузка изменений в ветку master
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. code-block:: bash

      git checkout develop  # Переключение на ветку develop
      git pull origin develop  # Получение последних изменений из репозитория
      git checkout master  # Переключение на ветку master
      git merge -m "ваш комментарий" develop # Слияние изменений из ветки develop в ветку master
      git push origin master  # Загрузка изменений в ветку master
