Первые дни в команде
====================

Как и в любой новой команде, первые дни технического писателя могут быть трудными, но интересными. Первым делом следует ознакомиться с компанией, ее продуктами и проектами, а также понять, какие документы уже были созданы и насколько полезны они были для пользователей.

Знакомство с командой
---------------------

Технический писатель будет работать с разными специалистами, такими как разработчики, тестировщики, аналитики, инженеры, дизайнеры, менеджеры продукта и QA-инженеры. Каждый из них может предоставить уникальную информацию, необходимую для создания документации.

Разработчики и инженеры: Они предоставляют технические детали о продукте, его функциональности и особенностях. Взаимодействие с разработчиками помогает понять сложные технические концепции и терминологию.

Дизайнеры: Сотрудничество с дизайнерами позволяет получить доступ к макетам, изображениям и графике, которые могут использоваться для визуального улучшения документов.

Менеджеры продукта: Они могут предоставить информацию о целевой аудитории, основных преимуществах продукта и его использовании в реальных сценариях.

QA-инженеры: Их обратная связь может быть ценной для выявления возможных проблем или недочетов в документации.

Технический ландшафт организации и внутренние инструменты для работы
--------------------------------------------------------------------

Важно понять, как устроен процесс разработки, каким образом коммуницируют и взаимодействуют различные члены команды, и какие инструменты используются для управления проектами и документацией.

Основные инструменты для работы в команде:

Основные инструменты для работы в команде
=======================================

1. Системы управления проектами (Project Management Systems):

   Позволяют создавать задачи, просматривать статус выполнения проекта,
   распределять роли и сроки, а также отслеживать прогресс и результаты работы.


2. Виртуальные коммуникационные инструменты (Virtual Communication Tools):

   Включают платформы для онлайн-встреч, обмена сообщениями, аудио- и видеозвонков,
   что помогает общаться и сотрудничать удаленно.

3. Системы управления версиями (Version Control Systems):

   Позволяют отслеживать изменения в исходном коде или документации, управлять
   версиями и слиянием изменений от разных членов команды, например, Git или Bitbucket.

4. Постановка задач (Task Managers):

   Помогают отслеживать и организовывать задачи, которые должны быть выполнены командой,
   а также контролировать их прогресс и статус, например, Jira.

5. Системы обратной связи (Feedback Systems):

   Позволяют получать и оценивать обратную связь от коллег, пользователей или клиентов,
   что способствует улучшению работы команды и продукции.

6. Инструменты для онлайн-совещаний и вебинаров (Online Meeting and Webinar Tools):

   Облегчают общение и проведение презентаций или обучающих сессий в режиме реального времени.

7. База знаний (Knowledge Base):

    Предоставляет централизованное хранилище знаний, руководств и документации,
    доступное для всех участников команды, как правило, это Confluence - платформа для совместной работы над документацией, обмена знаний и сотрудничества.

8. Agile инструменты (Agile Tools):

    Agile - это методология разработки, которая подразумевает итеративный и гибкий подход
    к управлению проектами и задачами. Включение Agile-инструментов, таких как Agile
    платформы управления проектами (например, Jira Software или Trello), спринт-планирование,
    доски задач, ретроспективы и др., позволяет команде более эффективно управлять задачами
    и адаптироваться к изменениям в процессе разработки продукта или выполнения проекта.
    Agile также способствует улучшению коммуникации, прозрачности и коллективному владению проектом.



Изучение продукта
-----------------

Технический писатель должен изучить продукт или проект, над которым работает команда. Это может быть как программное обеспечение, так и аппаратное оборудование или другие технические решения. Важно понять, как продукт функционирует, его основные характеристики и для кого он предназначен.

Изучение документации
~~~~~~~~~~~~~~~~~~~~~

Технический писатель должен изучить существующую документацию, если она уже есть. Это поможет понять, что уже было сделано, и избежать дублирования работы.

База знаний
~~~~~~~~~~~

Изучите Базу знаний продукта.

Документация конкурентов
~~~~~~~~~~~~~~~~~~~~~~~~

Изучение документации конкурентов поможет в следующем:

Понимание лучших практик: Изучение документации конкурентов позволяет узнать о лучших практиках и подходах к представлению информации. Технический писатель может узнать, какие структуры, форматы и стили наиболее эффективны для передачи информации пользователю.

Избежание повторений: Поможет избежать повторений и создать уникальную и интересную документацию, которая будет отличаться от других продуктов на рынке.

Идентификация пробелов: Анализ документации конкурентов позволяет выявить пробелы или недостатки в их материалах. Технический писатель может использовать эту информацию для того, чтобы предоставить более полную и понятную документацию своего продукта.

Сравнение функциональности: Изучение документации конкурентов поможет понять, какие функции и возможности доступны в их продуктах. Это поможет техническому писателю выделить уникальные возможности своего продукта и сосредоточиться на их демонстрации.

Инновации и развитие: Анализ документации конкурентов может вдохновить технического писателя на новые идеи и подходы к созданию документации. Это способствует инновациям и развитию в сфере технической документации.

Изучение документации конкурентов не означает копирование их материалов, а только служит для возможности создавать оригинальную и уникальную документацию, соответствующую особенностям своего продукта и потребностям своих пользователей.

Общение с разработчиками и инженерами
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Необходимо установить контакт с разработчиками и инженерами, чтобы получить первичную техническую информацию о продукте.

Изучение технологий, который использует продукт
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Технический писатель должен изучить архитектуру продукта и понять какие технологии в нем используются, как различные компоненты взаимодействуют между собой.

Изучение программного интерфейса (API)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Если продукт предоставляет программный интерфейс для разработчиков, технический писатель должен изучить API и его функциональность. Это позволит создать документацию для разработчиков, которая поможет им успешно использовать API.

Изучить терминологию
~~~~~~~~~~~~~~~~~~~~

Технический писатель должен ознакомиться с техническими терминами и терминологией, используемой в продукте. Это поможет ему использовать правильные термины и обеспечить единообразие в документации.

Тестирование продукта
~~~~~~~~~~~~~~~~~~~~~

Для полного понимания продукта, технический писатель может протестировать его на практике. Установите продукт локально или используйте его веб-версию. Тестирование поможет выявить особенности продукта, проблемы пользователей и возможные сценарии использования, что позволит создать более релевантную документацию. На этом этапе записывайте все трудные моменты, с которыми вы столкнулись при использовании продукта: при установке, при использовании, вы сейчас в роли нового пользователя продукта и вы сможете дополнить документацию, чтобы, в дальнейшем, таких трудностей не возникало.

5. Общение с разработчиками и инженерами:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Технический писатель должен активно общаться с разработчиками и инженерами, чтобы получить дополнительную информацию о продукте и его технологиях. Регулярные обсуждения и интервью помогут уточнить детали и получить ценные знания от экспертов.


Изучение стандартов и инструментов документирования
---------------------------------------------------

Корпоративный стандарт
~~~~~~~~~~~~~~~~~~~~~~

Инструменты
~~~~~~~~~~~


Испытательный срок
------------------

Продолжительность
~~~~~~~~~~~~~~~~~

Как успешно пройти испытательный срок
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Постановка целей на испытательный срок
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Постановка целей после испытательного срока
-------------------------------------------


